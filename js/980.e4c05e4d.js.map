{"version":3,"file":"js/980.e4c05e4d.js","mappings":"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","sources":["webpack://GroundCoverMapper/./node_modules/@ionic/core/components/animation.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as raf } from './helpers.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n  keyframes.forEach(keyframe => {\n    for (const key in keyframe) {\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        }\n        else {\n          const newKey = convertCamelCaseToHypen(key);\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = (!supportsUnprefixed && supportsWebkitPrefix) ? '-webkit-' : '';\n  }\n  return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = { passive: true };\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes.map(keyframe => {\n    const offset = keyframe.offset;\n    const frameString = [];\n    for (const property in keyframe) {\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  }).join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n  let index = keyframeIds.indexOf(keyframeRules);\n  if (index < 0) {\n    index = (keyframeIds.push(keyframeRules) - 1);\n  }\n  return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n  const rootNode = element.getRootNode();\n  return (rootNode.head || rootNode);\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n  const stylesheet = (element.ownerDocument || document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = (Array.isArray(className)) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n  return classes;\n};\n\nconst createAnimation = (animationId) => {\n  let _delay;\n  let _duration;\n  let _easing;\n  let _iterations;\n  let _fill;\n  let _direction;\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = (typeof AnimationEffect === 'function' || typeof window.AnimationEffect === 'function');\n  const supportsWebAnimations = (typeof Element === 'function') && (typeof Element.prototype.animate === 'function') && supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n  const destroy = (clearStyleSheets) => {\n    childAnimations.forEach(childAnimation => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n  const cleanUp = (clearStyleSheets) => {\n    cleanUpElements();\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n  };\n  const onFinish = (callback, opts) => {\n    const callbacks = (opts && opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({ c: callback, o: opts });\n    return ani;\n  };\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    }\n    else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach(element => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach(stylesheet => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet && stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n  const beforeAddRead = (readFn) => {\n    _beforeAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const beforeAddWrite = (writeFn) => {\n    _beforeAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const afterAddRead = (readFn) => {\n    _afterAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const afterAddWrite = (writeFn) => {\n    _afterAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const beforeAddClass = (className) => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n  const beforeRemoveClass = (className) => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const afterAddClass = (className) => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n  const afterRemoveClass = (className) => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n    return 'both';\n  };\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n    if (_direction !== undefined) {\n      return _direction;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n    return 'normal';\n  };\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n    if (_easing !== undefined) {\n      return _easing;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n    return 'linear';\n  };\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n    if (_duration !== undefined) {\n      return _duration;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n    return 0;\n  };\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n    return 1;\n  };\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n    if (_delay !== undefined) {\n      return _delay;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n    return 0;\n  };\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n  const direction = (animationDirection) => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n  const fill = (animationFill) => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n  const delay = (animationDelay) => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n  const easing = (animationEasing) => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n  const duration = (animationDuration) => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n  const iterations = (animationIterations) => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n  const parent = (animation) => {\n    parentAnimation = animation;\n    return ani;\n  };\n  const addElement = (el) => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      }\n      else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      }\n      else {\n        console.error('Invalid addElement value');\n      }\n    }\n    return ani;\n  };\n  const addAnimation = (animationToAdd) => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      }\n      else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n    return ani;\n  };\n  const keyframes = (keyframeValues) => {\n    const different = _keyframes !== keyframeValues;\n    _keyframes = keyframeValues;\n    if (different) {\n      updateKeyframes(_keyframes);\n    }\n    return ani;\n  };\n  const updateKeyframes = (keyframeValues) => {\n    if (supportsWebAnimations) {\n      getWebAnimations().forEach(animation => {\n        if (animation.effect.setKeyframes) {\n          animation.effect.setKeyframes(keyframeValues);\n        }\n        else {\n          const newEffect = new KeyframeEffect(animation.effect.target, keyframeValues, animation.effect.getTiming());\n          animation.effect = newEffect;\n        }\n      });\n    }\n    else {\n      initializeCSSAnimation();\n    }\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach(callback => callback());\n    // Runs all before write callbacks\n    _beforeAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation runs\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout();\n    // Runs all after read callbacks\n    _afterAddReadFunctions.forEach(callback => callback());\n    // Runs all after write callbacks\n    _afterAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation ends\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n    if (willComplete) {\n      finished = true;\n    }\n    willComplete = true;\n  };\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n    numAnimationsRunning--;\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach(element => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = (animationId !== undefined) ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = (getIterations() === Infinity)\n          ? 'infinite'\n          : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n  const initializeWebAnimation = () => {\n    elements.forEach(element => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      }\n      else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n    initialized = true;\n  };\n  const setAnimationStep = (step) => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.currentTime = animation.effect.getComputedTiming().delay + (getDuration() * step);\n        animation.pause();\n      });\n    }\n    else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n  const updateWebAnimation = (step) => {\n    webAnimations.forEach(animation => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n    });\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach(element => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', (step !== undefined) ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = (getIterations() === Infinity)\n          ? 'infinite'\n          : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach(animation => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    }\n    else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n    return ani;\n  };\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach(animation => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n    if (!initialized) {\n      initializeAnimation();\n    }\n    update(false, true, step);\n    return ani;\n  };\n  const progressStep = (step) => {\n    childAnimations.forEach(animation => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach(animation => {\n      animation.progressEnd(playTo, step, dur);\n    });\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n    finished = false;\n    // tslint:disable-next-line: strict-boolean-conditions\n    willComplete = true;\n    if (playTo === 0) {\n      forceDirectionValue = (getDirection() === 'reverse') ? 'normal' : 'reverse';\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      }\n      else {\n        forceDelayValue = ((1 - step) * getDuration()) * -1;\n        update(false, false);\n      }\n    }\n    else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      }\n      else {\n        forceDelayValue = (step * getDuration()) * -1;\n        update(false, false);\n      }\n    }\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true\n      });\n      if (!parentAnimation) {\n        play();\n      }\n    }\n    return ani;\n  };\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach(animation => {\n          animation.pause();\n        });\n      }\n      else {\n        elements.forEach(element => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n    }\n  };\n  const pause = () => {\n    childAnimations.forEach(animation => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n    else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1;\n      // No need to set a timeout when animation has infinite iterations\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + (animationDuration * animationIterations) + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         *\n         * TODO: Is there a cleaner way to do this?\n         */\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach(element => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n  const playWebAnimations = () => {\n    webAnimations.forEach(animation => {\n      animation.play();\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    }\n    else {\n      updateCSSAnimation();\n    }\n  };\n  const play = (opts) => {\n    return new Promise(resolve => {\n      if (opts && opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => shouldForceSyncPlayback = false, { oneTimeCallback: true });\n      }\n      if (!initialized) {\n        initializeAnimation();\n      }\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n      onFinish(() => resolve(), { oneTimeCallback: true });\n      childAnimations.forEach(animation => {\n        animation.play();\n      });\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      }\n      else {\n        playCSSAnimations();\n      }\n    });\n  };\n  const stop = () => {\n    childAnimations.forEach(animation => {\n      animation.stop();\n    });\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n    resetFlags();\n  };\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    }\n    else {\n      _keyframes = [\n        { offset: 0, [property]: value },\n        ..._keyframes\n      ];\n    }\n    return ani;\n  };\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    }\n    else {\n      _keyframes = [\n        ..._keyframes,\n        { offset: 1, [property]: value }\n      ];\n    }\n    return ani;\n  };\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n  return ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    progressStart,\n    progressStep,\n    progressEnd\n  };\n};\n\nexport { createAnimation as c };\n"],"names":["animationPrefix","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","animationEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","generateKeyframeRules","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","getStyleContainer","rootNode","getRootNode","head","createKeyframeStylesheet","keyframeName","styleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","parentAnimation","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","ani","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","willComplete","finished","shouldCalculateNumAnimations","onFinishCallbacks","onFinishOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","window","supportsWebAnimations","Element","prototype","animate","ANIMATION_END_FALLBACK_PADDING_MS","getWebAnimations","destroy","clearStyleSheets","childAnimation","cleanUp","length","clearOnFinish","cleanUpElements","cleanUpStyleSheets","resetFlags","onFinish","callbacks","oneTimeCallback","c","o","animation","cancel","elementsArray","slice","r","parentNode","removeChild","beforeAddRead","readFn","beforeAddWrite","writeFn","afterAddRead","afterAddWrite","beforeAddClass","beforeRemoveClass","beforeStyles","styles","beforeClearStyles","propertyNames","afterAddClass","afterRemoveClass","afterStyles","afterClearStyles","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","getKeyframes","direction","animationDirection","update","fill","animationFill","delay","animationDelay","easing","animationEasing","duration","animationDuration","iterations","animationIterations","parent","addElement","nodeType","i","console","error","addAnimation","animationToAdd","keyframeValues","different","updateKeyframes","effect","setKeyframes","newEffect","KeyframeEffect","getTiming","initializeCSSAnimation","beforeAnimation","addClasses","removeClasses","elementClassList","classList","add","remove","afterAnimation","clearCSSAnimationsTimeout","currentStep","onFinishCallback","animationFinish","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","getComputedTiming","updateWebAnimation","updateTiming","updateCSSAnimation","deep","progressStart","forceLinearEasing","pauseAnimation","progressStep","progressEnd","playTo","dur","play","onAnimationEndFallback","clearTimeout","playCSSAnimations","isFinite","setTimeout","clearCSSAnimationPlayState","playWebAnimations","resetAnimation","Promise","resolve","sync","stop","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue"],"sourceRoot":""}